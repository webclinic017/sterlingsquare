version: '3.8'

services:
    django:
        build: .
        container_name: django
        command: python manage.py runserver 0.0.0.0:8000
        volumes: 
            - .:/usr/src/app
        ports: 
            - "8000:8000"
        environment: 
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1
            - CELERY_BROKER=redis://redis:6379
        depends_on: 
            - pgdb
            - redis

    celery:
        build: .
        command: celery -A sterling_square worker -l info
        volumes: 
            - .:/usr/src/app
        depends_on: 
            - django
            - redis
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    celery_beat:
        build: .
        command: celery -A sterling_square beat -l info
        volumes: 
            - .:/usr/src/app
        depends_on: 
            - django
            - redis
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]

    selenium:
        image: selenium/standalone-chrome
        ports:
        - 4444:4444

    pgdb:
        image: postgres
        container_name: pgdb
        environment: 
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            # - TZ=UTC
            # - PGTZ='GMT+2'

        volumes: 
            - pgdata:/var/lib/postgressql/data/
    
    redis:
        image: "redis:alpine"
        ports:
            - 0.0.0.0:6379:6379/tcp
        # ports:
        #     - '127.0.0.1:6379:6379/tcp'
        # volumes:
        #     - 'redis_data:/data:rw'
        healthcheck:
            test: redis-cli ping
            interval: 3s
            timeout: 5s
            retries: 5
    
    redisinsight:
        image: 'redislabs/redisinsight:latest'
        ports:
            - '127.0.0.1:8001:8001'
    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080
    
volumes: 
    pgdata:
   